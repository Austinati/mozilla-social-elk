$schema: moz://mozilla.org/schemas/glean/metrics/2-0-0

moso_events: # If we're using a single metrics.yaml across Mozilla Social, what do I call the category? Can I omit a category?

  # First we have some event properties that are re-used across all events
  # I implemented these as uuid/string/quantity metrics, instead of nesting them as extra_keys inside events. Is this valid?

  # Is it possible to attach them to the baseline ping, as I've done?

  mastodon_account_id:
    type: string
    lifetime: application
    description: >
      The user's account ID from Mastodon.
    bugs:
      - TBD
    data_reviews:
      - TBD
    data_sensitivity:
      - technical
    notification_emails:
      - kdemtchouk@mozilla.com
    expires: never
    send_in_pings:
      - events

  mastodon_handle:
    type: string
    lifetime: application
    description: >
      The user's account handle.
    bugs:
      - TBD
    data_reviews:
      - TBD
    data_sensitivity:
      - technical
    notification_emails:
      - kdemtchouk@mozilla.com
    expires: never
    send_in_pings:
      - events

  mastodon_instance_domain:
    type: string
    lifetime: application
    description: >
      The domain of the Mastodon instance where
      the user's Mastodon account is hosted (e.g. `mozilla.social`).
    bugs:
      - TBD
    data_reviews:
      - TBD
    data_sensitivity:
      - technical
    notification_emails:
      - kdemtchouk@mozilla.com
    expires: never
    send_in_pings:
      - events

  page_url:
    type: string
    lifetime: application
    description: >
      The page the user visited
    bugs:
      - TBD
    data_reviews:
      - TBD
    data_sensitivity:
      - technical
    notification_emails:
      - kdemtchouk@mozilla.com
    expires: never
    send_in_pings:
      - events

  referrer_url:
    type: string
    lifetime: application
    description: >
      The page the user came from
    bugs:
      - TBD
    data_reviews:
      - TBD
    data_sensitivity:
      - technical
    notification_emails:
      - kdemtchouk@mozilla.com
    expires: never
    send_in_pings:
      - events

  impression:
    type: event
    description: >
      Event triggered when a user views a notable UI element.
      Triggered once per page load, as soon as any pixel of that UI
      element is visible in the foreground for any length of time.
      UI elements may include: content, pages, CTAs, etc.
    bugs:
      - TBD
    data_reviews:
      - TBD
    data_sensitivity:
      - interaction
    notification_emails:
      - kdemtchouk@mozilla.com
    expires: never
    extra_keys:
      ui_identifier: &ui_identifier
        description: >
          The string id of the UI element that was seen/interacted
          with by the user (e.g. `home.rec` or `home.boost`).
          The identifier is a period-delimited string, ordered in
          increasing order of specificity (e.g. `[SCREEN].[BUTTON]`).
          #Call out tracking spreadsheet for all possible values of ui_identifier here?
        type: string
      ui_additional_detail: &ui_additional_detail
        description: >
          An optional string to record further informatin about the UI
          element, such as its starting value if it is a toggle or setting.
        type: string
      mastodon_status_id: &mastodon_status_id
        description: >
          The Mastodon status ID of the post that was seen/interacted
          with by the user, if any.
          The Mastodon API calls statuses "posts", but they are one and the same.
        type: quantity
      corpus_recommendation_id: &corpus_recommendation_id
        description: >
          TBD machine learning/recommendation identifier of the content
          that was seen/interacted with by the user, if any.
        type: string
    send_in_pings:
      - events

  engagement:
    type: event
    description: >
      Event triggered when a user taps/clicks on a UI element,
      triggering a change in app state.
    bugs:
      - TBD
    data_reviews:
      - TBD
    data_sensitivity:
      - interaction
    notification_emails:
      - kdemtchouk@mozilla.com
    expires: never
    extra_keys:
      ui_identifier: *ui_identifier
      ui_additional_detail: *ui_additional_detail
      mastodon_status_id: *mastodon_status_id
      corpus_recommendation_id: *corpus_recommendation_id
      engagement_type:
        description: >
          The type of user engagement that triggered this event.
          One of:
            * `follow`
            * `post`
            * `reply`
            * `favorite`
            * `boost`
            * `bookmark`
            * `general`
        type: string
      engagement_value:
        description: >
          If the UI element is a toggle or setting, the value of the
          toggle/setting after user interaction has taken place.
        type: string
    send_in_pings:
      - events

  page_view:
    type: event
    description: >
      Event triggered when a user requests to load a web page.
    bugs:
      - TBD
    data_reviews:
      - TBD
    data_sensitivity:
      - interaction
    notification_emails:
      - kdemtchouk@mozilla.com
    expires: never
    extra_keys:
      page_url: &page_url
        description: >
          The full URL of the page that was visited,
          along with URL query parameters.
          For example, `https://mozilla.social/home?utm_source=test`.
        type: string
      referrer_url: &referrer_url
        description: >
          The full URL of the previous web page from which a link was followed
          in order to trigger the page view.
          Comes from the `referer` field of the HTTP header.
          May not always be available.
          For example, `https://www.google.com`.
        type: string
    send_in_pings:
      - events

  # Ideally, we would have a page_ping event too, but without a page view ID, I am not sure it would be useful for data modeling
  # A page_ping would let us track time on page, as well as scroll progress

  link_click:
    type: event
    description: >
      Event triggered when a user clicks a link on a web page.
    bugs:
      - TBD
    data_reviews:
      - TBD
    data_sensitivity:
      - interaction
    notification_emails:
      - kdemtchouk@mozilla.com
    expires: never
    extra_keys:
      target_url:
        description: >
          The destination URL of the link that the user clicked.
        type: string
      element_id:
        description: >
          The HTML element ID of the link that the user clicked.
        type: string
    send_in_pings:
      - events

  object_update:
    type: event
    description: >
      Event triggered by the backend to record the change in state
      of an object (e.g. API requests to the mozilla.social Mastodon
      server).
      In the future, we could potentially use this event to track
      changes in state to core Mastodon objects (e.g. accounts and
      posts).
    bugs:
      - TBD
    data_reviews:
      - TBD
    data_sensitivity:
      - interaction
    notification_emails:
      - kdemtchouk@mozilla.com
    expires: never
    extra_keys:
      object_type:
        description: >
          A simple name to describe the object whose state changed.
          For example, `api_request`.
        type: string
      object_state:
        description: >
          A JSON representation of the latest state of the object.
        type: string # Is there a JSON type?
    send_in_pings:
      - events
